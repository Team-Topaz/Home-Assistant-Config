input_number:
  garden_irrigation_target:
    name: Garden Irrigation Inches
    icon: mdi:water
    min: 0
    max: 4
    step: .25

input_boolean:
  garden_irrigated:
    name: 'Garden Watered'
    icon: mdi:water-pump

binary_sensor:
  - platform: template
    sensors:
      garden_is_growing_season:
        friendly_name: 'Garden: Is Growing Season'
        device_class: cold
        value_template: >
          {% if ((states('sensor.day_of_year') | int) >= 90) and ((states('sensor.day_of_year') | int) <= 305) %}
           True
          {% else %}
           False
          {% endif %}
      garden_sun_is_visible:
        friendly_name: 'Garden: Sun is Visible'
        device_class: light
        value_template: >
          {% if ( states('sensor.solar_elevation') | float ) > 31 %}
           True
          {% else %}
           False
          {% endif %}

sensor:
  - platform: mqtt
    state_topic: "rainmeter/weekly"
    name: "Garden Rainmeter Weekly"
    unit_of_measurement: "in"
    value_template: '{{ value | float | round(1) }}'

  - platform: mqtt
    state_topic: "rainmeter/heatcompensation"
    name: "Garden Rainmeter Heat Compensation"
    unit_of_measurement: "in"
    value_template: '{{ value | float | round(1) }}'

  - platform: template
    sensors:
      garden_rainmeter_water_needs:
        friendly_name: 'Garden Rainmeter Water Needs'
        value_template: "{{ ((states('input_number.garden_irrigation_target') | float) - (states('sensor.garden_rainmeter_weekly') | float) + (states('sensor.garden_rainmeter_heat_compensation') | float)) | round(1) }}"
        unit_of_measurement: 'in'
      garden_rainmeter_water_needs_gal:
        friendly_name: 'Garden Rainmeter Irrigation Volume'
        value_template: "{{ ((states('sensor.garden_rainmeter_water_needs') | float) * 34.28) | round(0) }}"
        unit_of_measurement: 'gal'
        #The conversion from inches to gallons is: 1" * 55 sq ft = 4.58 cubic feet * 7.48052 cu ft/gallon = 34.28 gallons per inch of water needed.

  #Calculate the sun exposure of the garden. My formula for this is pretty bad.
  #We assume that we have 0 sun exposure unless the sun is above 32 degrees.
  #At 32 degrees, sun exposure is considered to be 100%
  #The sun exposure is then just the cloud cover coefficient.
  - platform: template
    sensors:
      garden_sun_level:
        friendly_name: 'Garden Sun Exposure'
        value_template: >
          {% if is_state('binary_sensor.garden_sun_is_visible', 'On') %}
            {{ (states('sensor.cloud_cover_coefficient') | float) * 100 }}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: '%'
