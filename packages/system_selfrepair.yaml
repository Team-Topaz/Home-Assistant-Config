#A few functions for self-health.

script:
  #The modem's switch should automatically toggle back on - but this explicitly requests it to turn back on.
  restart_modem:
    alias: Restart Modem
    sequence:
      - service: switch.turn_off
        data:
          entity_id: switch.modem_power
      - delay:
          seconds: 30
      - service: light.turn_on
        data:
          entity_id: switch.modem_power
      - delay:
          minutes: 5
      - service: notify.preferred_notification
        data:
          title: 'Modem Restarted'
          message: "Internet was down, so I rebooted the modem."
          data:
            tag: 'modem_reboot_notify'

switch:
  - platform: mqtt
    name: "Modem Power"
    state_topic: "stat/modemswitch/POWER"
    command_topic: "cmnd/modemswitch/POWER"
    availability_topic: "tele/modemswitch/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false

automation:
  #Tasks for keeping Home Assistant running well.

  #This auto-restarts Home Assistant. Rethink a bit? It's OK to restart when we're asleep.
  #There's an uptime restriction in conditions to prevent a condition where HASS bootloops.
  - id: hass_auto_reboot
    alias: "HASS: Auto-reboot When Needed"
    trigger:
      - platform: numeric_state
        entity_id: sensor.ram_used
        above: 95
    condition:
      condition: and
      conditions:
        - condition: numeric_state
          entity_id: sensor.uptime
          above: 3
        - condition: state
          entity_id: group.indoor_lights
          state: 'off'
        - condition: state
          entity_id: group.outdoor_lights
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.anybody_home
              state: 'off'
            - condition: time
              after: '01:00:00'
              before: '02:00:00'
    action:
      - service: notify.preferred_notification
        data:
          title: 'Reboot Initiated'
          message: "Home Assistant needed to reboot."
          data:
            tag: 'reboot_initiated'
      - service: homeassistant.restart

  - id: hass_mqtt_timeout_reached
    alias: "HASS: MQTT Timeout"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data: {"state": "idle", "entity_id": "timer.mqtt_timeout"}
    action:
    - service: notify.preferred_notification
      data_template:
        title: 'Connectivity to MQTT lost'
        message: "This may cause difficulties controlling some lights and reading some sensors."
        data:
          tag: 'hass_mqtt'
          actions:
          - action: hass_restart
            title: "Restart"

  - id: hass_restart_clicked
    alias: 'HASS: Restart Requested'
    trigger:
      platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: hass_restart
    condition:
      condition: state
      entity_id: input_boolean.power_out
      state: 'on'
    action:
    - service: notify.preferred_notification
      data:
        title: 'Home Assistant Restart'
        message: "Home Assistant has been restarted by user request."
        data:
          tag: 'hass_restart'
    - service: homeassistant.restart
    #Sometimes the network falls over. We're hopefully going to detect this and resolve it.
  - id: networkfix-modemreboot
    alias: 'Network Fix: Reboot Modem'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: binary_sensor.modem_ping
        to: 'off'
        for:
          minutes: 10
    condition:
      condition: state
      entity_id: binary_sensor.gateway_ping
      state: 'on'
    action:
    - service: script.turn_on
      entity_id: script.restart_modem
