climate:
  - platform: generic_thermostat
    name: Office Fan
    heater: fan.office_fan
    target_sensor: sensor.office_temperature
    min_temp: 70
    max_temp: 80
    ac_mode: True
    initial_operation_mode: 'off'

  - platform: generic_thermostat
    name: Bonus Room Fan
    heater: fan.bonus_room_fan
    target_sensor: sensor.bonus_room_temperature
    min_temp: 70
    max_temp: 80
    ac_mode: True
    initial_operation_mode: 'off'

input_boolean:
  #These modes are used to remember what the state of the fan was before people
  #left. This way we can toggle the climate component appropriately.
  office_fan_previous_state:
    name: 'Office fan previous state'

  bonus_room_fan_previous_state:
    name: 'Bonus room fan previous state'

fan:
  - platform: mqtt
    name: "Office Fan"
    command_topic: "officefan/cmnd/FanSpeed"
    speed_command_topic: "officefan/cmnd/FanSpeed"
    state_topic: "officefan/stat/RESULT"
    speed_state_topic: "officefan/stat/RESULT"
    state_value_template: >
      {% if value_json.FanSpeed is defined %}
        {% if value_json.FanSpeed == 0 -%}0{%- elif value_json.FanSpeed > 0 -%}4{%- endif %}
      {% else %}
        {% if states.fan.office_fan.state == 'off' -%}0{%- elif states.fan.office_fan.state == 'on' -%}4{%- endif %}
      {% endif %}
    speed_value_template: "{{ value_json.FanSpeed }}"
    availability_topic: officefan/tele/LWT
    payload_off: "0"
    payload_on: "4"
    payload_low_speed: "1"
    payload_medium_speed: "2"
    payload_high_speed: "3"
    payload_available: Online
    payload_not_available: Offline
    speeds:
      - 'off'
      - low
      - medium
      - high

  - platform: mqtt
    name: "Bonus Room Fan"
    command_topic: "bonusroomfan/cmnd/FanSpeed"
    speed_command_topic: "bonusroomfan/cmnd/FanSpeed"
    state_topic: "bonusroomfan/stat/RESULT"
    speed_state_topic: "bonusroomfan/stat/RESULT"
    state_value_template: >
      {% if value_json.FanSpeed is defined %}
        {% if value_json.FanSpeed == 0 -%}0{%- elif value_json.FanSpeed > 0 -%}4{%- endif %}
      {% else %}
        {% if states.fan.bonus_room_fan.state == 'off' -%}0{%- elif states.fan.bonus_room_fan.state == 'on' -%}4{%- endif %}
      {% endif %}
    speed_value_template: "{{ value_json.FanSpeed }}"
    availability_topic: bonusroomfan/tele/LWT
    payload_off: "0"
    payload_on: "4"
    payload_low_speed: "1"
    payload_medium_speed: "2"
    payload_high_speed: "3"
    payload_available: Online
    payload_not_available: Offline
    speeds:
      - 'off'
      - low
      - medium
      - high

script:
  office_save_fan_state:
    alias: 'Office: Save fan state'
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.office_fan_previous_state
      - condition: state
        entity_id: climate.office_fan
        state: 'off'
      - service: input_boolean.turn_off
        entity_id: input_boolean.office_fan_previous_state

  office_restore_fan_state:
    alias: 'Office: Restore fan state'
    sequence:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.office_fan
          operation_mode: 'off'
      - condition: state
        entity_id: input_boolean.office_fan_previous_state
        state: 'on'
      - service: climate.set_operation_mode
        data:
          entity_id: climate.office_fan
          operation_mode: 'cool'

  bonus_room_save_fan_state:
    alias: 'Bonus Room: Save fan state'
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.bonus_room_fan_previous_state
      - condition: state
        entity_id: climate.bonus_room_fan
        state: 'off'
      - service: input_boolean.turn_off
        entity_id: input_boolean.bonus_room_fan_previous_state

  bonus_room_restore_fan_state:
    alias: 'Bonus Room: Restore fan state'
    sequence:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.bonus_room_fan
          operation_mode: 'off'
      - condition: state
        entity_id: input_boolean.bonus_room_fan_previous_state
        state: 'on'
      - service: climate.set_operation_mode
        data:
          entity_id: climate.bonus_room_fan
          operation_mode: 'cool'

automation:
  #OFFICE FAN#
  - id: office_enable_autofan_when_motion
    alias: 'Office Fan: Turn On When Motion'
    trigger:
    - platform: state
      entity_id: binary_sensor.office_motion
      to: 'on'
    condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: 'on'
    - condition: state
      entity_id: climate.office_fan
      state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.office_restore_fan_state

  - id: office_disable_autofan_when_away
    alias: 'Office Fan: Disable autofan when away'
    trigger:
    - platform: state
      entity_id: binary_sensor.anybody_home
      to: 'off'
      for:
        minutes: 15
    - platform: state
      entity_id: binary_sensor.office_motion
      to: 'off'
      for:
        minutes: 30
    condition:
      condition: state
      entity_id: binary_sensor.office_motion
      state: 'off'
      for:
        minutes: 15
    action:
      - service: script.turn_on
        entity_id: script.office_save_fan_state
      - service: climate.set_operation_mode
        data:
          entity_id: climate.office_fan
          operation_mode: 'off'
  #BONUS ROOM FAN
  - id: bonus_room_enable_autofan_when_motion
    alias: 'Bonus Room Fan: Turn On When Motion'
    trigger:
    - platform: state
      entity_id: binary_sensor.bonus_room_motion
      to: 'on'
    condition:
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: 'on'
    - condition: state
      entity_id: climate.bonus_room_fan
      state: 'off'
    action:
      - service: script.turn_on
        entity_id: script.bonus_room_restore_fan_state

  - id: bonus_room_disable_autofan_when_away
    alias: 'Bonus Room Fan: Disable autofan when away'
    trigger:
    - platform: state
      entity_id: binary_sensor.anybody_home
      to: 'off'
      for:
        minutes: 5
    - platform: state
      entity_id: binary_sensor.bonus_room_motion
      to: 'off'
      for:
        minutes: 10
    condition:
      condition: state
      entity_id: binary_sensor.bonus_room_motion
      state: 'off'
      for:
        minutes: 10
    action:
      - service: script.turn_on
        entity_id: script.bonus_room_save_fan_state
      - service: climate.set_operation_mode
        data:
          entity_id: climate.bonus_room_fan
          operation_mode: 'off'
