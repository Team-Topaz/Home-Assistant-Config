binary_sensor:
  - platform: template
    sensors:
      summer_hotter_inside:
        friendly_name: "Hotter Inside than Outside"
        device_class: heat
        delay_on:
          minutes: 1
        delay_off:
          minutes: 1
        value_template: >-
          {{ states('sensor.outdoor_temperature_sensor')|float < states('sensor.living_room_temperature')|float }}
      summer_hotter_inside_than_target:
        friendly_name: "Hotter Inside than Target"
        device_class: heat
        delay_on:
          minutes: 1
        delay_off:
          minutes: 1
        value_template: >-
          {{ states('sensor.living_room_temperature')|float > states('input_number.summer_desired_temperature')|float }}
      summer_hotter_inside_than_limit:
        friendly_name: "Hotter Inside than Limit"
        device_class: heat
        delay_on:
          minutes: 1
        delay_off:
          minutes: 1
        value_template: >-
          {{ states('sensor.living_room_temperature')|float > states('input_number.summer_minimum_temperature_to_open')|float }}
      summer_hotter_outside_than_limit:
        friendly_name: "Hotter Outside than Limit"
        device_class: heat
        delay_on:
          minutes: 1
        delay_off:
          minutes: 1
        value_template: >-
          {{ states('sensor.outdoor_temperature_sensor')|float > states('input_number.summer_max_outdoor_window_open_temperature')|float }}
      summer_open_window:
        # This works by checking if it is already on. If so, it checks if it's below the desired temperature. If not, it checks if it's above the temperature limit.
        friendly_name: "OK to Open Windows"
        device_class: window
        delay_on:
          minutes: 5
        delay_off: 
          minutes: 5
        value_template: >
          {% if is_state('binary_sensor.summer_open_window', 'on') and is_state('binary_sensor.summer_hotter_inside', 'on') and is_state('binary_sensor.summer_hotter_inside_than_target', 'on') and is_state('binary_sensor.summer_hotter_outside_than_limit', 'off') %}
            true
          {% elif is_state('binary_sensor.summer_open_window', 'off') and is_state('binary_sensor.summer_hotter_inside', 'on') and is_state('binary_sensor.summer_hotter_inside_than_limit', 'on') and is_state('binary_sensor.summer_hotter_outside_than_limit', 'off') %}
            true
          {% else %}
            false
          {% endif %}

input_number:
  summer_desired_temperature:
    name: Desired Temperature
    initial: 70
    min: 60
    max: 80
    step: 1
    unit_of_measurement: '°F'
    icon: mdi:thermometer
  summer_minimum_temperature_to_open:
    name: Temperature Limit before Opening Windows
    initial: 75
    min: 70
    max: 80
    step: 1
    unit_of_measurement: '°F'
    icon: mdi:thermometer
  summer_max_outdoor_window_open_temperature:
    name: Max Outdoor Temperature
    initial: 77
    min: 75
    max: 85
    step: 1
    unit_of_measurement: '°F'
    icon: mdi:thermometer-alert

automation:
  - id: summer_open_windows
    alias: 'Summer: Open the Windows'
    trigger:
      - platform: state
        entity_id: binary_sensor.summer_open_window
        to: 'on'
    action:
    - choose:
      - conditions: 
          - condition: state
            entity_id: person.ryan
            state: "home"
        sequence: 
        - service: notify.mobile_app_ryan_s_phone
          data_template:
            title: 'Open the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'
      - conditions: 
          - condition: state
            entity_id: person.chelsea
            state: "home"
        sequence: 
        - service: notify.mobile_app_chelsea_phone
          data_template:
            title: 'Open the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'
      - conditions: 
          - condition: state
            entity_id: binary_sensor.anybody_home
            state: "home"
        sequence: 
        - service: notify.preferred_notification
          data_template:
            title: 'Open the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'
  - id: summer_close_windows
    alias: 'Summer: Close the Windows'
    trigger:
      - platform: state
        entity_id: binary_sensor.summer_open_window
        to: 'off'
    action:
    - choose:
      - conditions: 
          - condition: state
            entity_id: person.ryan
            state: "home"
        sequence: 
        - service: notify.mobile_app_ryan_s_phone
          data_template:
            title: 'Close the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'
      - conditions: 
          - condition: state
            entity_id: person.chelsea
            state: "home"
        sequence: 
        - service: notify.mobile_app_chelsea_phone
          data_template:
            title: 'Close the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'
      - conditions: 
          - condition: state
            entity_id: binary_sensor.anybody_home
            state: "home"
        sequence: 
        - service: notify.preferred_notification
          data_template:
            title: 'Close the Windows!'
            message: "Indoor: {{ states('sensor.living_room_temperature') }}°F Outdoor: {{ states('sensor.outdoor_temperature_sensor') }}°F"
            data:
              tag: 'summer_window'